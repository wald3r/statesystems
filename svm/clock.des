INITIALIZER:

   from Tkinter import *
   from DWatchGUI import DWatchGUI
  
   root = Tk()
   root.title("A title")
   
   g = DWatchGUI(root, eventhandler)


   eventhandler.start()
   root.mainloop()   
   exit()


STATECHART:
    CLOCK [DS]
        LIGHT [CS][DS]
            LIGHTOFF[DS]
            LIGHTON
            LIGHTOFF2
        ALARM[CS][DS]
            WAITING[DS]
            STARTALARM1
            STARTALARM2
        ALARMTIMER[CS][DS]
            RUNNING
            WAITING[DS]

        CHRONO [CS][DS]
            INCREASE
            WAITING [DS]
        TIME [CS][DS]
            INCREASE [DS]
            WAITING
            
        MODE [CS][DS]
            TIME [DS]        
            EDITTIME
                TIMERSTART
                TIMEREND
                EDIT
                    INIT [DS]
                    INCRAUTOMATICALLY
                    START
                    END
            ALARM
                  EDIT
                    INIT [DS]
                    INCRAUTOMATICALLY
                    START
                    END
                  START
                  END
            CHRONO

###################################
# Alternating mode (time, chrono) - Task 3
###################################

TRANSITION:
    S: CLOCK.MODE.TIME
    N: CLOCK.MODE.CHRONO
    E: changeMode
    O: g.refreshChronoDisplay()

TRANSITION:
    S: CLOCK.MODE.CHRONO
    N: CLOCK.MODE.TIME
    E: changeMode
    O: g.refreshTimeDisplay()

##################################
# running background clock and chrono
##################################

TRANSITION:
    S: CLOCK.CHRONO.INCREASE
    N: CLOCK.CHRONO.INCREASE
    T: 1.0 / 4.0
    O: g.increaseChronoByOne()

TRANSITION:
    S: CLOCK.TIME.INCREASE
    N: CLOCK.TIME.INCREASE
    T: 1
    O: g.increaseTimeByOne()

# stop / start background clock

TRANSITION:
    S: CLOCK.TIME.INCREASE
    N: CLOCK.TIME.WAITING
    E: pauseClock
    O: print "stopping clock"

TRANSITION:
    S: CLOCK.TIME.WAITING
    N: CLOCK.TIME.INCREASE
    E: startClock
    O: print "starting clock"

# stop / start background chrono

TRANSITION:
    S: CLOCK.CHRONO.WAITING
    N: CLOCK.CHRONO.INCREASE
    E: toggleChrono
    O: print "start chrono"

TRANSITION:
    S: CLOCK.CHRONO.INCREASE
    N: CLOCK.CHRONO.WAITING
    E: toggleChrono
    O: print "stop chrono"

######################################
# CHRONO - Task 4
######################################

# chrono UI

TRANSITION:
    S: CLOCK.MODE.CHRONO
    N: CLOCK.MODE.CHRONO
    T: 1.0 / 4.0
    O: g.refreshChronoDisplay()

TRANSITION:
    S: CLOCK.MODE.CHRONO
    N: CLOCK.MODE.CHRONO
    E: initChrono
    O: eventhandler.event("toggleChrono")

TRANSITION:
    S: CLOCK.MODE.CHRONO
    N: CLOCK.MODE.CHRONO
    E: resetChrono
    O: g.resetChrono()
       g.refreshChronoDisplay()

########################################
# CLOCK
########################################

TRANSITION:
    S: CLOCK.MODE.TIME
    N: CLOCK.MODE.TIME
    T: 1
    O: g.refreshTimeDisplay()


########################################
# Increase Selection Edit - Task 7
########################################

TRANSITION:
    S: CLOCK.MODE.EDITTIME.EDIT.INIT
    N: CLOCK.MODE.EDITTIME.EDIT.INCRAUTOMATICALLY
    E: increase
    O: g.increaseSelection()

TRANSITION:
    S: CLOCK.MODE.EDITTIME.EDIT.INCRAUTOMATICALLY
    N: CLOCK.MODE.EDITTIME.EDIT.INCRAUTOMATICALLY
    T: 0.3
    O: g.increaseSelection()

TRANSITION:
    S: CLOCK.MODE.EDITTIME.EDIT.INCRAUTOMATICALLY
    N: CLOCK.MODE.EDITTIME.EDIT.INIT
    E: stopInc

##############################################
# Quit after 5 seconds - EDIT - Task 7
##############################################

TRANSITION:
    S: CLOCK.MODE.EDITTIME.EDIT.INIT
    N: CLOCK.MODE.TIME
    T: 5
    O: g.stopSelection()
       eventhandler.event("startClock")
       print "stopped editing"

##########################################
# 2 sec timer for exiting editing mode or select next digit - Task 7 -EDIT
########################################

TRANSITION:
    S: CLOCK.MODE.EDITTIME.EDIT.INIT
    N: CLOCK.MODE.EDITTIME.EDIT.START
    E: finishEdit
    O: print "finish edit"
       eventhandler.event("startClock")

TRANSITION:
    S: CLOCK.MODE.EDITTIME.EDIT.END
    N: CLOCK.MODE.TIME
    E: released
    O: g.stopSelection()

TRANSITION:
    S: CLOCK.MODE.EDITTIME.EDIT.START
    N: CLOCK.MODE.EDITTIME.EDIT.INIT
    E: released
    O: g.selectNext()
       print "next selection"

TRANSITION:
    S: CLOCK.MODE.EDITTIME.EDIT.START
    N: CLOCK.MODE.EDITTIME.EDIT.END
    T: 2
    O: print "end timer"

################################
# open time edit mode - press for 1.5 seconds
################################

TRANSITION:
    S: CLOCK.MODE.TIME
    N: CLOCK.MODE.EDITTIME.TIMERSTART
    E: editTime
    O: print "start timer"

TRANSITION:
    S: CLOCK.MODE.EDITTIME.TIMERSTART
    N: CLOCK.MODE.EDITTIME.EDIT
    T: 1.5
    O: print "end timer"
       eventhandler.event("pauseClock")

TRANSITION:
    S: CLOCK.MODE.EDITTIME.TIMERSTART
    N: CLOCK.MODE.TIME
    E: released


#TRANSITION:
#    S: CLOCK.MODE.EDITTIME.TIMEREND
#    N: CLOCK.MODE.EDITTIME.EDIT.INIT
#    E: released
#    O: g.startSelection()
#       print "start selecting"













################################
# Alarm - Task 6
################################

TRANSITION:
    S: CLOCK.ALARM.WAITING
    N: CLOCK.ALARM.STARTALARM1
    T: 0.1
    C: g.checkTime()
    O: eventhandler.event("startAlarm")


TRANSITION:
    S: CLOCK.ALARMTIMER.WAITING
    N: CLOCK.ALARMTIMER.RUNNING
    E: startAlarm

TRANSITION:
    S: CLOCK.ALARMTIMER.RUNNING
    N: CLOCK.ALARMTIMER.WAITING
    T: 4.0
    O: eventhandler.event("stopAlarm")
       print "stopAlarm"

TRANSITION:
    S: CLOCK.ALARM.STARTALARM1
    N: CLOCK.ALARM.STARTALARM2
    T: 0.5 [OTT]
    O: g.setIndiglo()

TRANSITION:
    S: CLOCK.ALARM.STARTALARM2
    N: CLOCK.ALARM.STARTALARM1
    T: 0.5 [OTT]
    O: g.unsetIndiglo()

TRANSITION:
    S: CLOCK.ALARM.STARTALARM2
    N: CLOCK.ALARM.WAITING
    E: onoff
    O: g.unsetIndiglo()

TRANSITION:
    S: CLOCK.ALARM.STARTALARM1
    N: CLOCK.ALARM.WAITING
    E: onoff
    O: g.unsetIndiglo()

TRANSITION:
    S: CLOCK.ALARM.STARTALARM2
    N: CLOCK.ALARM.WAITING
    E: released
    O: g.unsetIndiglo()

TRANSITION:
    S: CLOCK.ALARM.STARTALARM1
    N: CLOCK.ALARM.WAITING
    E: released
    O: g.unsetIndiglo()

TRANSITION:
    S: CLOCK.ALARM.STARTALARM2
    N: CLOCK.ALARM.WAITING
    E: lightOn
    O: g.unsetIndiglo()

TRANSITION:
    S: CLOCK.ALARM.STARTALARM1
    N: CLOCK.ALARM.WAITING
    E: lightOn
    O: g.unsetIndiglo()

TRANSITION:
    S: CLOCK.ALARM.STARTALARM2
    N: CLOCK.ALARM.WAITING
    E: stopAlarm
    O: g.unsetIndiglo()

TRANSITION:
    S: CLOCK.ALARM.STARTALARM1
    N: CLOCK.ALARM.WAITING
    E: stopAlarm
    O: g.unsetIndiglo()



TRANSITION:
    S: CLOCK.ALARM.STARTALARM2
    N: CLOCK.ALARM.WAITING
    E: changeMode
    O: g.unsetIndiglo()

TRANSITION:
    S: CLOCK.ALARM.STARTALARM1
    N: CLOCK.ALARM.WAITING
    E: changeMode
    O: g.unsetIndiglo()






###############################################
# ALARM UI
###############################################

TRANSITION:
    S: CLOCK.MODE.TIME
    N: CLOCK.MODE.ALARM.START
    E: setAlarm
    O: print "start timer"
       g.setAlarm()
       g.refreshAlarmDisplay()

TRANSITION:
    S: CLOCK.MODE.ALARM.END
    N: CLOCK.MODE.ALARM.EDIT.INIT
    E: onoff
    O: g.refreshAlarmDisplay()
       g.startSelection()

TRANSITION:
    S: CLOCK.MODE.ALARM.START
    N: CLOCK.MODE.TIME
    E: onoff

TRANSITION:
    S: CLOCK.MODE.ALARM.START
    N: CLOCK.MODE.ALARM.END
    T: 1.5
    O: print "end timer"

########################################
# Increase Selection Edit - Task 7 - ALARM
###############################################

TRANSITION:
    S: CLOCK.MODE.ALARM.EDIT.INIT
    N: CLOCK.MODE.ALARM.EDIT.INCRAUTOMATICALLY
    E: increase
    O: g.increaseSelection()

TRANSITION:
    S: CLOCK.MODE.ALARM.EDIT.INCRAUTOMATICALLY
    N: CLOCK.MODE.ALARM.EDIT.INCRAUTOMATICALLY
    T: 0.3
    O: g.increaseSelection()

TRANSITION:
    S: CLOCK.MODE.ALARM.EDIT.INCRAUTOMATICALLY
    N: CLOCK.MODE.ALARM.EDIT.INIT
    E: stopInc

##############################################
# Quit after 5 seconds <- ALARM
###############################################

TRANSITION:
    S: CLOCK.MODE.ALARM.EDIT.INIT
    N: CLOCK.MODE.TIME
    T: 5
    O: g.stopSelection()
       print "stopped editing"

##########################################
#2 sec timer for exiting editing mode or select next digit - Task 7 <- ALARM
TRANSITION:
    S: CLOCK.MODE.ALARM.EDIT.INIT
    N: CLOCK.MODE.ALARM.EDIT.START
    E: finishEdit
    O: print "start timer"


TRANSITION:
    S: CLOCK.MODE.ALARM.EDIT.END
    N: CLOCK.MODE.TIME
    E: released
    O: g.stopSelection()

TRANSITION:
    S: CLOCK.MODE.ALARM.EDIT.START
    N: CLOCK.MODE.ALARM.EDIT.INIT
    E: released
    O: g.selectNext()
       print "next selection"

TRANSITION:
    S: CLOCK.MODE.ALARM.EDIT.START
    N: CLOCK.MODE.ALARM.EDIT.END
    T: 2
    O: print "end timer"






















################################
# Background Light - Task 2 Transitions
################################

TRANSITION:
    S: CLOCK.LIGHT.LIGHTOFF
    N: CLOCK.LIGHT.LIGHTON
    E: lightOn
    O: g.setIndiglo()
       print "turn light on"

TRANSITION:
    S: CLOCK.LIGHT.LIGHTON
    N: CLOCK.LIGHT.LIGHTOFF2
    E: lightOff

TRANSITION:
    S: CLOCK.LIGHT.LIGHTOFF2
    N: CLOCK.LIGHT.LIGHTOFF
    T: 2
    O: g.unsetIndiglo()
       print "turn light off"
